.ORIG x10
.START x10

//R6 CONTAINS FINAL ANS
MOV w x256 R4
MOV w xF R5	//EXTRACT UNITS PLACE
AND w R4 R5
MOV w x1 R1	
MOV w R5 R2	
CALL MUL 
// R3 CONTAINS MULTIPLICATION ANS
MOV w R3 R6

MOV w xF0 R5	//EXTRACT TENS PLACE
AND w R4 R5
SHIFT w R NC R5 x4
MOV w xA R1	
MOV w R5 R2	
CALL MUL 
ADD w R3 R6

MOV w xF00 R5	//EXTRACT HUNDREDS PLACE
AND w R4 R5
SHIFT w R NC R5 x8
MOV w x64 R1	
MOV w R5 R2	
CALL MUL 
ADD w R3 R6
HALT

// INPUT
// R1 CONTAINS BIGGER NO
// R2 CONTAINS SMALLER NO

// OUTPUT
// R3 CONTAINS ANS

// R10 IS TEMP VAR

MUL: MOV w R2 R10
	MOV W x0 R3 
LOOP: COMP w x0 R10
	JGE DONE
	ADD w R1 R3
	SUB w x1 R10
	JMP LOOP
DONE: RET	
.END