.ORIG x200
.START x200

MOV b x3 R5
STORE b x100 R5

MOV b x1 R5
STORE b x101 R5

MOV b x2 R5
STORE b x102 R5

MOV b x3 R5
STORE b x103 R5

MOV b x4 R5
STORE b x104 R5

MOV b x5 R5
STORE b x105 R5

MOV b x5 R6        //USED TO COUNT 6       
MOV w X0 R7              //HAS RUNNING SUM         
ADDLOOP: COMP b x0 R6
    JGT ENDADDLOOP
    LOAD b x100[R6] R8
    ADD w R8 R7   
    SUB b x1 R6
    JMP ADDLOOP

// SUM IS IN R7

ENDADDLOOP: MOV w R7 R1

MOV b x6 R2
CALL POSDIV
COMP w x0 R4
JGE COND
ADD w x1 R3        

COND: STORE b x107 R3

HALT

// INPUT: R1 MUST HAVE DIVIDEND
// R2 MUST HAVE DIVISOR
// OUTPUT: R3 CONTAINS QUOTIENT
// R4 CONTAINS REMAINDER
// FOR DIV OF NEGATIVE NOS WE NEED TO ADD
// FOR DIV OF POSITIVE NOS WE NEED TO SUB

POSDIV: MOV w R1 R4
    MOV b x0 R3
DIVLOOP: COMP w R4 R2
    JLT DIVLOOPENDS
    SUB w R2 R4
    ADD w x1 R3
    JMP DIVLOOP
DIVLOOPENDS: RET    
.END